name: scom_bundle
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools python-dotenv nuitka
          python -m pip install -r requirements.txt

      - name: Get version from .env
        id: version
        shell: bash
        run: |
          VERSION=$(grep 'VERSION=' .env | cut -d '=' -f2 | tr -d "'\"")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build package
        run: |
          python setup.py build

      - name: Find generated package
        id: find_package
        shell: bash
        run: |
          PACKAGE=$(ls SCOM-*.zip)
          echo "package_name=${PACKAGE}" >> $GITHUB_OUTPUT
          echo "PACKAGE=${PACKAGE}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: SCOM-v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ env.PACKAGE }}
          asset_name: ${{ env.PACKAGE }}
          asset_content_type: application/zip
